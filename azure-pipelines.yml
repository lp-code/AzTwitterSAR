# .NET Core Function App to Windows on Azure
# Build a .NET Core function app and deploy it to Azure as a Windows function App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

trigger:
- pr

variables:
  # Build configuration setting
  buildConfiguration: 'Release'

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '45a6fef4-d860-401b-9ec2-7d6c0101f1f0'

  # ARM template location
  armTemplateLocation: '$(System.DefaultWorkingDirectory)/infrastructure'

  # Agent VM image name
  vmImageName: vs2017-win2016

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/azTwitterSar'

stages:
- stage: Build
  displayName: Build AzTwitterSAR, release configuration

  jobs:
  - job: Build
    displayName: Build job
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: Build step dotnetcore
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: --no-restore --configuration $(buildConfiguration)

    - task: DotNetCoreCLI@2
      displayName: Run tests
      inputs:
        command: test
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - powershell: Tree /F
      workingDirectory: 'D:\a\1\s\'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: 'DurableAzTwitterSar/DurableAzTwitterSar.csproj'
        arguments: '--no-build --configuration $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/$(Build.BuildId)'
        publishWebProjects: false
        zipAfterPublish: true
        modifyOutputPath: true
    
    - powershell: Tree /F 
      workingDirectory: 'D:\a\1\s\'

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: 'drop'

    - powershell: Tree /F
      workingDirectory: $(Build.ArtifactStagingDirectory)

- stage: CreateCloudResources_Test
  displayName: Create cloud resources in the test-rg
  dependsOn: Build

  jobs:
  - job: Create
    displayName: Create
    
    steps:
    - task: AzureResourceGroupDeployment@2
      displayName: 'Deploy template'
      inputs:
        ConnectedServiceName: 'ConnectDevopsToAzure_rg-rkh-twittersarvestpd-test'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'rg-rkh-twittersarvestpd-test'
        location: 'norwayeast'
        templateLocation: 'Linked artifact'
        csmFile: '$(armTemplateLocation)/aztwittersar_template.json'
        csmParametersFile: '$(armTemplateLocation)/aztwittersar_parameters.json'
        overrideParameters: -env test
        deploymentMode: 'Complete'
        deploymentName: 'AzTwitterSAR-Pipeline'

- stage: Deploy_Test
  displayName: Deploy to the test-rg
  dependsOn: ['Build', 'CreateCloudResources_Test']
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: test
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - download: current
            artifact: drop
          - task: AzureFunctionApp@1
            displayName: 'Azure function app deploy'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: 'func-rkh-twittersar-test'
              package: '$(Pipeline.Workspace)/drop/**/*.zip'
              deploymentMethod: runFromPackage

- stage: CreateCloudResources_Prod
  displayName: Create cloud resources in the prod-rg
  dependsOn: ['Build', 'Deploy_Test']

  jobs:
  - job: Create
    displayName: Create
    
    steps:
    - task: AzureResourceGroupDeployment@2
      displayName: 'Deploy template'
      inputs:
        ConnectedServiceName: 'ConnectDevopsToAzure_rg-rkh-twittersarvestpd-prod'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'rg-rkh-twittersarvestpd-prod'
        location: 'norwayeast'
        templateLocation: 'Linked artifact'
        csmFile: '$(armTemplateLocation)/aztwittersar_template.json'
        csmParametersFile: '$(armTemplateLocation)/aztwittersar_parameters.json'
        overrideParameters: -env prod
        deploymentMode: 'Complete'
        deploymentName: 'AzTwitterSAR-Pipeline'

- stage: Deploy_prod
  displayName: Deploy to the prod-rg
  dependsOn: ['Build', 'Deploy_Test', 'CreateCloudResources_Prod']
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: prod
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - download: current
            artifact: drop
          - task: AzureFunctionApp@1
            displayName: 'Azure function app deploy'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: 'func-rkh-twittersar-prod'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
